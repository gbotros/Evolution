// <auto-generated />
using System;
using Evolution.Apis;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Evolution.Apis.Migrations
{
    [DbContext(typeof(EvolutionDbContext))]
    [Migration("20200627165911_add steps")]
    partial class addsteps
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Evolution.Entities.AnimalBlueprint", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("BirthDay")
                        .HasColumnType("int");

                    b.Property<int?>("DeathDay")
                        .HasColumnType("int");

                    b.Property<int>("Energy")
                        .HasColumnType("int");

                    b.Property<bool>("IsAlive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Speed")
                        .HasColumnType("int");

                    b.Property<int>("Steps")
                        .HasColumnType("int");

                    b.Property<int>("Weight")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Animals");
                });

            modelBuilder.Entity("Evolution.Entities.PlantBlueprint", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("BirthDay")
                        .HasColumnType("int");

                    b.Property<int?>("DeathDay")
                        .HasColumnType("int");

                    b.Property<int>("GrowthAmount")
                        .HasColumnType("int");

                    b.Property<bool>("IsAlive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Weight")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Plants");
                });

            modelBuilder.Entity("Evolution.Entities.AnimalBlueprint", b =>
                {
                    b.OwnsOne("Evolution.Entities.LocationBlueprint", "Location", b1 =>
                        {
                            b1.Property<Guid>("AnimalBlueprintId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<int>("X")
                                .HasColumnType("int");

                            b1.Property<int>("Y")
                                .HasColumnType("int");

                            b1.HasKey("AnimalBlueprintId");

                            b1.ToTable("Animals");

                            b1.WithOwner()
                                .HasForeignKey("AnimalBlueprintId");
                        });
                });

            modelBuilder.Entity("Evolution.Entities.PlantBlueprint", b =>
                {
                    b.OwnsOne("Evolution.Entities.LocationBlueprint", "Location", b1 =>
                        {
                            b1.Property<Guid>("PlantBlueprintId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<int>("X")
                                .HasColumnType("int");

                            b1.Property<int>("Y")
                                .HasColumnType("int");

                            b1.HasKey("PlantBlueprintId");

                            b1.ToTable("Plants");

                            b1.WithOwner()
                                .HasForeignKey("PlantBlueprintId");
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
