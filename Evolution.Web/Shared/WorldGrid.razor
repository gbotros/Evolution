@using Evolution.Web.Models

<div>
    <div>
        <input @bind-value="@newAnimalName"
               placeholder="Enter new animal name"
               class="@Css.Input" />
        <Button @onclick="@(e => CreateNewAnimal())"
                class="@Css.Button">
            new Animal
        </Button>
        <Button @onclick="@(e => CreateNewPlant())"
                class="@Css.Button">
            new Plant
        </Button>
    </div>
    
    <div>
        <div>
            Count: @WorldStore.GetAnimalsCount();
        </div>
        <div>
            Avg Speed: @WorldStore.GetAnimalsAvgSpeed();
        </div>
        <div>
            Food: @WorldStore.GetAvailableFood();
        </div>
    </div>

    @if (WorldStore.IsLoading)
    {
        <div> Loading... </div>
    }
    else
    {
        @for (var r = 0; r < WorldStore.GameSettingsDto.WorldSize.Height; r++)
        {
            <div name="row-@r" class="flex items-center">
                @for (var c = 0; c < WorldStore.GameSettingsDto.WorldSize.Width; c++)
                {
                    <div name="col-@c" class="flex items-center">
                        <div name="cell-@r-@c" class="flex flex-wrap border-2 border-gray-50 rounded-sm @(!WorldStore.GetAnimalsAt(r, c).Any() ? "bg-gray-100" : "")" style="width: 32px; height: 32px;">
                            @*( @r , @c )*@

                            @foreach (var plant in WorldStore.GetPlantsAt(r, c))
                            {
                                <PlantComponent Plant="@plant" OnActed="@ReloadPlants"></PlantComponent>
                            }

                            @foreach (var animal in WorldStore.GetAnimalsAt(r, c))
                            {
                                <AnimalComponent Animal="@animal" OnActed="@ReloadAnimals"></AnimalComponent>
                            }

                        </div>
                    </div>
                }
            </div>
        }
    }
</div>